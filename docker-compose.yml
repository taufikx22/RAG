version: "3.9"

services:
  # Main RAG application
  rag-app:
    build: .
    container_name: rag-system
    ports:
      - "8000:8000"
    environment:
      - VECTOR_STORE_DEFAULT=chroma
      - CHROMA_PERSIST_DIR=/app/data/chroma_db
      - CHROMA_COLLECTION_NAME=documents
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./app:/app/app
      - ./src:/app/src
    depends_on:
      - qdrant
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Qdrant vector database (optional, for production use)
  qdrant:
    image: qdrant/qdrant:v1.8.4
    container_name: qdrant-db
    ports:
      - "6333:6333"
    volumes:
      - ./data/qdrant:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional, for production)
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  rag-data:
    driver: local

networks:
  default:
    name: rag-network
